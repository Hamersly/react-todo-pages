{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.jsx","components/List/List.styles.js","components/Input/Input.styles.js","components/Input/Input.jsx","components/Task/Task.styles.js","components/Task/Task.jsx","components/List/List.jsx","App.js","index.js"],"names":["StyledTitle","styled","h1","Title","props","ListWrapper","div","TasksList","MyButton","button","RemoveTasksButton","RemoveTasksBlock","InputBlock","StyledInput","input","AddButton","Input","addTodo","useState","value","setValue","addTodoInList","trim","length","type","onChange","e","target","onKeyDown","key","placeholder","onClick","TaskWrapper","TaaskBlock","DateBlock","Date","h3","RemoveButton","TaskText","Completed","Task","task","removeTodo","todoCompleted","date","id","isCompleted","text","List","tasks","setTasks","filter","map","newTasks","nanoid","toLocaleString","item","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEaA,EAAcC,IAAOC,GAAV,2N,OCCXC,EAAQ,SAACC,GAClB,OAAO,cAACJ,EAAD,yB,8BCFEK,EAAcJ,IAAOK,IAAV,0BACXC,EAAYN,IAAOK,IAAV,0BACTE,EAAWP,IAAOQ,OAAV,+LASRC,EAAoBT,YAAOO,EAAPP,CAAH,sDAIjBU,EAAmBV,IAAOK,IAAV,qGCdhBM,EAAaX,IAAOK,IAAV,6GAMVO,EAAcZ,IAAOa,MAAV,6JAQXC,EAAYd,YAAOO,EAAPP,CAAH,2DCdTe,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRC,mBAAS,IADD,mBAC3BC,EAD2B,KACpBC,EADoB,KAG5BC,EAAgB,WACU,IAAxBF,EAAMG,OAAOC,SACbN,EAAQE,EAAMG,QACdF,EAAS,MAUjB,OACI,eAACR,EAAD,WACI,cAACC,EAAD,CACIW,KAAK,OACLL,MAAOA,EACPM,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOR,QACnCS,UAZS,SAACF,GACJ,UAAVA,EAAEG,KACFR,KAWIS,YAAY,wEAEhB,cAACf,EAAD,CAAWgB,QAASV,EAApB,kEC1BCW,EAAc/B,IAAOK,IAAV,0JAQX2B,EAAahC,IAAOK,IAAV,sOAUV4B,EAAYjC,IAAOK,IAAV,qFAKT6B,EAAOlC,IAAOmC,GAAV,sIAOJC,EAAepC,IAAOQ,OAAV,uNAUZ6B,EAAWrC,IAAOmC,GAAV,mEACf,SAAChC,GAAD,OAAWA,EAAMmC,aCjCVC,EAAO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACrC,OACI,eAACV,EAAD,WACI,eAACC,EAAD,WACI,cAAC,EAAD,UAAOO,EAAKG,OACZ,cAACP,EAAD,CAAcN,QAAS,kBAAMW,EAAWD,EAAKI,KAA7C,2DAIJ,cAACb,EAAD,CAAaD,QAAS,kBAAMY,EAAcF,EAAKI,KAA/C,SACKJ,EAAKK,YACF,cAACR,EAAD,CAAUC,UAAW,iCAArB,SACKE,EAAKM,OAEX,cAACT,EAAD,UAAWG,EAAKM,aCbtBC,EAAO,WAAO,IAAD,EACI9B,mBAAS,IADb,mBACf+B,EADe,KACRC,EADQ,KAchBR,EAAa,SAACG,GAChBK,EAASD,EAAME,QAAO,SAACV,GAAD,OAAUA,EAAKI,KAAOA,OAG1CF,EAAgB,SAACE,GACnBK,EAAS,YAAID,EAAMG,KAAI,SAACX,GAAD,OAAUA,EAAKI,KAAOA,EAAZ,2BACzBJ,GADyB,IACnBK,aAAcL,EAAKK,cADA,eACmBL,SAGxD,OACI,eAACpC,EAAD,WACI,cAAC,EAAD,CAAOY,QAtBC,SAAC8B,GACb,IAAMM,EAAW,CACbR,GAAIS,cACJV,MAAM,IAAIT,MAAOoB,iBACjBR,OACAD,aAAa,GAGjBI,EAAS,GAAD,mBAAKD,GAAL,CAAYI,QAehB,cAAC9C,EAAD,UACK0C,EAAMG,KAAI,SAACI,GAAD,OACP,cAAC,EAAD,CACId,WAAYA,EACZD,KAAMe,EACNb,cAAeA,GACVa,EAAKX,SAItB,cAAClC,EAAD,UACKsC,EAAM1B,OAAS,EACZ,cAACb,EAAD,CAAmBqB,QAAS,kBAAMmB,EAAS,KAA3C,2EAIA,8BClDPO,EAAM,WACf,OACI,sBAAKC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCFZC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.03c3d0d0.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n    font-famili: \"Roboto\", sans-serif;\n    font-weight: 700;\n    font-size: 3rem;\n    text-align: center;\n    margin-top 30px;\n    color: #A9A9A9;\n    text-shadow: 5px 5px 10px black;\n`;\n","import React from \"react\";\nimport { StyledTitle } from \"./Title.styles\";\n\nexport const Title = (props) => {\n    return <StyledTitle>Todo list</StyledTitle>;\n};\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div``;\nexport const TasksList = styled.div``;\nexport const MyButton = styled.button`\n    padding: 5px 15px;\n    font-size: 20px;\n    background: transparent;\n    background-color: orange;\n    box-shadow: 0 0 10px 2px black;\n    border: none;\n`;\n\nexport const RemoveTasksButton = styled(MyButton)`\n    margin-bottom: 30px;\n`;\n\nexport const RemoveTasksBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 30px;\n`;\n","import styled from \"styled-components\";\nimport { MyButton } from \"../List/List.styles\";\n\nexport const InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: space-around;\n`;\n\nexport const StyledInput = styled.input`\n    width: 100%;\n    padding: 10px 15px;\n    margin-top: 30px;\n    border-radius: 30px;\n    box-shadow: 0 0 10px 5px black;\n`;\n\nexport const AddButton = styled(MyButton)`\n    margin: 30px auto 0 auto;\n`;\n","import React, { useState } from \"react\";\nimport { StyledInput, InputBlock, AddButton } from \"./Input.styles\";\n\nexport const Input = ({ addTodo }) => {\n    const [value, setValue] = useState(\"\");\n\n    const addTodoInList = () => {\n        if (value.trim().length !== 0) {\n            addTodo(value.trim());\n            setValue(\"\");\n        }\n    };\n\n    const handleSubmit = (e) => {\n        if (e.key === \"Enter\") {\n            addTodoInList();\n        }\n    };\n\n    return (\n        <InputBlock>\n            <StyledInput\n                type=\"text\"\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyDown={handleSubmit}\n                placeholder=\"Введи задачу\"\n            />\n            <AddButton onClick={addTodoInList}>Добавить</AddButton>\n        </InputBlock>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const TaskWrapper = styled.div`\n    display: flex;\n    padding: 15px;\n    // margin: 5px 0;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const TaaskBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: space-around;\n    margin: 30px 0 0 0 ;\n    box-shadow: 0 0 10px 5px black;\n    background-color: #A9A9A9;\n    border-radius: 30px;\n`;\n\nexport const DateBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const Date = styled.h3`\n    color: orange;\n    margin: 15px 0 15px 15px;\n    width: auto;\n    text-shadow: 1px 1px 2px black;\n`;\n\nexport const RemoveButton = styled.button`\n    background-color: orange;\n    border: none;   \n    padding: 10px;\n    margin: 15px 15px 0 0;\n    border-radius: 0%;\n    box-shadow: 0 0 10px 3px black;\n    border-radius: 50px\n`;\n\nexport const TaskText = styled.h3`\n    ${(props) => props.Completed};\n    word-break: break-word;\n`;\n","import React from \"react\";\nimport {\n    TaskWrapper,\n    TaskText,\n    TaaskBlock,\n    DateBlock,\n    RemoveButton,\n    Date\n} from \"./Task.styles\";\n\nexport const Task = ({ task, removeTodo, todoCompleted }) => {\n    return (\n        <TaaskBlock>\n            <DateBlock>\n                <Date>{task.date}</Date>\n                <RemoveButton onClick={() => removeTodo(task.id)}>\n                удалить\n            </RemoveButton>\n            </DateBlock>\n            <TaskWrapper onClick={() => todoCompleted(task.id)}>\n                {task.isCompleted ? \n                    <TaskText Completed={\"text-decoration: line-through;\"}>\n                        {task.text}\n                    </TaskText>\n                 : <TaskText>{task.text}</TaskText>\n                }\n            </TaskWrapper>\n            \n        </TaaskBlock>\n    );\n};\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport {\n    ListWrapper,\n    TasksList,\n    RemoveTasksButton,\n    RemoveTasksBlock,\n} from \"./List.styles\";\nimport { Input } from \"../Input/Input\";\nimport { Task } from \"../Task/Task\";\n\nexport const List = () => {\n    const [tasks, setTasks] = useState([]);\n\n    const addTodo = (text) => {\n        const newTasks = {\n            id: nanoid(),\n            date: new Date().toLocaleString(),\n            text,\n            isCompleted: false,\n        };\n\n        setTasks([...tasks, newTasks]);\n    };\n\n    const removeTodo = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id));\n    };\n\n    const todoCompleted = (id) => {\n        setTasks([...tasks.map((task) => task.id === id ? \n            {...task, isCompleted: !task.isCompleted} : {...task})]);\n    };\n\n    return (\n        <ListWrapper>\n            <Input addTodo={addTodo} />\n            <TasksList>\n                {tasks.map((item) => (\n                    <Task\n                        removeTodo={removeTodo}\n                        task={item}\n                        todoCompleted={todoCompleted}\n                        key={item.id}\n                    />\n                ))}\n            </TasksList>\n            <RemoveTasksBlock>\n                {tasks.length > 1 ? (\n                    <RemoveTasksButton onClick={() => setTasks([])}>\n                        Удалить всё\n                    </RemoveTasksButton>\n                ) : (\n                    <div></div>\n                )}\n            </RemoveTasksBlock>\n        </ListWrapper>\n    );\n};\n","import { Title } from \"./components/Title/Title\";\nimport { List } from \"./components/List/List\";\n\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <Title />\n            <List />\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}