{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.jsx","components/List/List.styles.js","components/Input/Input.styles.js","components/Input/Input.jsx","components/Task/Task.styles.js","components/Task/Task.jsx","components/List/List.jsx","App.js","index.js"],"names":["StyledTitle","styled","h1","Title","props","ListWrapper","div","TasksList","MyButton","button","RemoveTasksButton","RemoveTasksBlock","InputBlock","StyledInput","input","AddButton","Input","addTodo","useState","value","setValue","addTodoInList","trim","length","type","onChange","e","target","onKeyDown","code","placeholder","onClick","TaskWrapper","TaaskBlock","RemoveButton","TaskText","h3","Completed","Task","task","removeTodo","todoCompleted","date","id","isCompleted","text","List","tasks","setTasks","filter","sortTodo","arr","todoindex","findIndex","sort","a","b","newTasks","newTodo","nanoid","Date","toLocaleString","map","item","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a12d3fc.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n    font-famili: \"Roboto\", sans-serif;\n    font-weight: 700;\n    font-size: 3rem;\n    text-align: center;\n`;\n","import React from \"react\";\nimport { StyledTitle } from \"./Title.styles\";\n\nexport const Title = (props) => {\n    return <StyledTitle>TodoList</StyledTitle>;\n};\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div``;\nexport const TasksList = styled.div``;\nexport const MyButton = styled.button`\n    padding: 5px 15px;\n    font-size: 20px;\n    background: transparent;\n    border: 2px solid;\n    margin: 5px auto;\n`;\n\nexport const RemoveTasksButton = styled(MyButton)`\n    background-color: orange;\n`;\n\nexport const RemoveTasksBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n`;\n","import styled from \"styled-components\";\nimport { MyButton } from \"../List/List.styles\";\n\nexport const InputBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: space-around;\n`;\n\nexport const StyledInput = styled.input`\n    width: 100%;\n    padding: 10px 15px;\n    margin: 5px 0;\n    border: 1px solid;\n`;\n\nexport const AddButton = styled(MyButton)`\n    border-color: green;\n`;\n","import React, { useState } from \"react\";\nimport { StyledInput, InputBlock, AddButton } from \"./Input.styles\";\n\nexport const Input = ({ addTodo }) => {\n    const [value, setValue] = useState(\"\");\n\n    const addTodoInList = () => {\n        if (value.trim().length !== 0) {\n            addTodo(value.trim());\n            setValue(\"\");\n        }\n    };\n\n    const handleSubmit = (e) => {\n        if (e.code === \"Enter\") {\n            addTodoInList();\n        }\n    };\n\n    return (\n        <InputBlock>\n            <StyledInput\n                type=\"text\"\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyDown={handleSubmit}\n                placeholder=\"Введи задачу\"\n            />\n            <AddButton onClick={addTodoInList}>Добавить задание</AddButton>\n        </InputBlock>\n    );\n};\n","import styled from \"styled-components\";\nimport { MyButton } from \"../List/List.styles\";\n\nexport const TaskWrapper = styled.div`\n    display: flex;\n    padding: 15px;\n    border: 2px solid;\n    margin: 5px 0;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const TaaskBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: space-around;\n    margin: 15px 0;\n`;\n\nexport const RemoveButton = styled(MyButton)`\n    border-color: red;\n`;\n\nexport const TaskText = styled.h3`\n    ${(props) => props.Completed};\n    word-break: break-all;\n`;\n","import React from \"react\";\nimport { TaskWrapper, TaskText, TaaskBlock, RemoveButton } from \"./Task.styles\";\n\nexport const Task = ({ task, removeTodo, todoCompleted }) => {\n    return (\n        <TaaskBlock>\n            <p>{task.date}</p>\n            <TaskWrapper onClick={() => todoCompleted(task.id)}>\n                {task.isCompleted ? (\n                    <TaskText Completed={\"text-decoration: line-through;\"}>\n                        {task.text}\n                    </TaskText>\n                ) : (\n                    <TaskText>{task.text}</TaskText>\n                )}\n            </TaskWrapper>\n            <RemoveButton onClick={() => removeTodo(task.id)}>\n                Удалить задание\n            </RemoveButton>\n        </TaaskBlock>\n    );\n};\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport {\n    ListWrapper,\n    TasksList,\n    RemoveTasksButton,\n    RemoveTasksBlock,\n} from \"./List.styles\";\nimport { Input } from \"../Input/Input\";\nimport { Task } from \"../Task/Task\";\n\nexport const List = () => {\n    const [tasks, setTasks] = useState([]);\n\n    const addTodo = (text) => {\n        const newTodo = {\n            id: nanoid(),\n            date: new Date().toLocaleString(),\n            text,\n            isCompleted: false,\n        };\n\n        const arr = [...tasks, newTodo];\n        const newTasks = sortTodo(arr);\n\n        setTasks(newTasks);\n    };\n\n    const removeTodo = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id));\n    };\n\n    const sortTodo = (arr, id) => {\n        if (id) {\n            const todoindex = arr.findIndex((task) => task.id === id);\n            arr[todoindex].isCompleted = !arr[todoindex].isCompleted;\n        }\n        return arr.sort((a, b) => a.isCompleted - b.isCompleted);\n    };\n\n    const todoCompleted = (id) => {\n        const arr = [...tasks];\n        const newTasks = sortTodo(arr, id);\n        setTasks(newTasks);\n    };\n\n    return (\n        <ListWrapper>\n            <Input addTodo={addTodo} />\n            <TasksList>\n                {tasks.map((item) => (\n                    <Task\n                        removeTodo={removeTodo}\n                        task={item}\n                        todoCompleted={todoCompleted}\n                        key={item.id}\n                    />\n                ))}\n            </TasksList>\n            <RemoveTasksBlock>\n                {tasks.length > 1 ? (\n                    <RemoveTasksButton onClick={() => setTasks([])}>\n                        Удалить все задания\n                    </RemoveTasksButton>\n                ) : (\n                    <div></div>\n                )}\n            </RemoveTasksBlock>\n        </ListWrapper>\n    );\n};\n","import { Title } from \"./components/Title/Title\";\nimport { List } from \"./components/List/List\";\n\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <Title />\n            <List />\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}