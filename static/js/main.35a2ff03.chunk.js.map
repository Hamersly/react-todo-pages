{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.jsx","components/List/List.styles.js","components/Input/Input.styles.js","components/Input/Input.jsx","components/Task/Task.styles.js","components/Task/Task.jsx","components/List/List.jsx","App.js","index.js"],"names":["StyledTitle","styled","h1","Title","props","ListWrapper","div","TasksList","MyButton","button","RemoveTasksButton","RemoveTasksBlock","InputBlock","StyledInput","input","AddButton","Input","addTodo","useState","value","setValue","addTodoInList","trim","length","type","onChange","e","target","onKeyDown","code","placeholder","onClick","TaskWrapper","TaaskBlock","RemoveButton","TaskText","h3","Completed","Task","task","removeTodo","todoCompleted","date","isCompleted","text","checked","id","List","tasks","setTasks","filter","sortTodo","arr","todoindex","findIndex","sort","a","b","newTasks","newTodo","nanoid","Date","toLocaleString","map","item","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35a2ff03.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n\tfont-famili: 'Roboto', sans-serif;\n\tfont-weight: 700;\n\tfont-size: 3rem;\n\ttext-align: center;\n\t`;\n\n","import React from \"react\";\nimport {StyledTitle} from './Title.styles';\n\nconst Title = (props) => {\n\treturn (\n\t\t<StyledTitle>TodoList</StyledTitle>\n\t);\n};\n\nexport default Title;\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div``;\nexport const TasksList = styled.div``;\nexport const MyButton = styled.button`\n\tpadding: 5px 15px;\n\tfont-size: 20px;\n\tbackground: transparent;\n\tborder: 2px solid;\n\tmargin: 5px auto;\n`;\n\nexport const RemoveTasksButton = styled(MyButton)`\n\tbackground-color: orange;\n`;\n\nexport const RemoveTasksBlock = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-top: 20px;\n`;","import styled from \"styled-components\";\nimport { MyButton } from \"../List/List.styles\";\n\nexport const InputBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: space-around;\n`;\n\nexport const StyledInput = styled.input`\n\twidth: 100%;\n\tpadding: 10px 15px;\n\tmargin: 5px 0;\n\tborder: 1px solid;\n`;\n\nexport const AddButton = styled(MyButton)`\n\tborder-color: green;\n`;\n\n","import React, { useState } from \"react\";\nimport { StyledInput, InputBlock, AddButton } from \"./Input.styles\";\n\nconst Input = ({ addTodo }) => {\n\tconst [value, setValue] = useState(\"\");\n\n\tconst addTodoInList = () => {\n\t\tif (value.trim().length !== 0) {\n\t\t\taddTodo(value.trim());\n\t\t\tsetValue(\"\");\n\t\t}\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\tif (e.code === \"Enter\") {\n\t\t\taddTodoInList();\n\t\t}\n\t};\n\n\treturn (\n\t\t<InputBlock>\n\t\t\t<StyledInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e) => setValue(e.target.value)}\n\t\t\t\tonKeyDown={handleSubmit}\n\t\t\t\tplaceholder=\"Введи задачу\"\n\t\t\t/>\n\t\t\t<AddButton onClick={addTodoInList}>Добавить задание</AddButton>\n\t\t</InputBlock>\n\t);\n};\n\nexport default Input;\n","import styled from \"styled-components\";\nimport { MyButton } from \"../List/List.styles\";\n\nexport const TaskWrapper = styled.div`\n\tdisplay: flex;\n\tpadding: 15px;\n\tborder: 2px solid;\n\tmargin: 5px 0;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\n\nexport const TaaskBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: space-around;\n\tmargin: 15px 0;\n`;\n\nexport const RemoveButton = styled(MyButton)`\n\tborder-color: red;\n`;\n\nexport const TaskText = styled.h3`\n\t${props => props.Completed};\n`;\n","import React from \"react\";\nimport { TaskWrapper, TaskText, TaaskBlock, RemoveButton } from \"./Task.styles\";\n\nconst Task = ({ task, removeTodo, todoCompleted }) => {\n\treturn (\n\t\t<TaaskBlock>\n\t\t\t<p>{task.date}</p>\n\t\t\t<TaskWrapper>\n\t\t\t\t{task.isCompleted ? (\n\t\t\t\t\t<TaskText Completed={\"text-decoration: line-through;\"}>\n\t\t\t\t\t\t{task.text}\n\t\t\t\t\t</TaskText>\n\t\t\t\t) : (\n\t\t\t\t\t<TaskText>{task.text}</TaskText>\n\t\t\t\t)}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={task.isCompleted}\n\t\t\t\t\tonChange={() => todoCompleted(task.id)}\n\t\t\t\t/>\n\t\t\t</TaskWrapper>\n\t\t\t<RemoveButton onClick={() => removeTodo(task.id)}>\n\t\t\t\tУдалить задание\n\t\t\t</RemoveButton>\n\t\t</TaaskBlock>\n\t);\n};\n\nexport default Task;\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport {\n\tListWrapper,\n\tTasksList,\n\tRemoveTasksButton,\n\tRemoveTasksBlock,\n} from \"./List.styles\";\n\nimport Input from \"../Input/Input\";\nimport Task from \"../Task/Task\";\n\nconst List = () => {\n\tconst [tasks, setTasks] = useState([]);\n\n\tconst addTodo = (text) => {\n\t\tconst newTodo = {\n\t\t\tid: nanoid(),\n\t\t\tdate: new Date().toLocaleString(),\n\t\t\ttext,\n\t\t\tisCompleted: false,\n\t\t};\n\n\t\tconst arr = [...tasks, newTodo];\n\t\tconst newTasks = sortTodo(arr);\n\n\t\tsetTasks(newTasks);\n\t};\n\n\tconst removeTodo = (id) => {\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\n\t};\n\n\tconst sortTodo = (arr, id) => {\n\t\tif (id) {\n\t\t\tconst todoindex = arr.findIndex((task) => task.id === id);\n\t\t\tarr[todoindex].isCompleted = !arr[todoindex].isCompleted;\n\t\t}\n\t\treturn arr.sort((a, b) => a.isCompleted - b.isCompleted);\n\t};\n\n\tconst todoCompleted = (id) => {\n\t\tconst arr = [...tasks];\n\t\tconst newTasks = sortTodo(arr, id);\n\t\tsetTasks(newTasks);\n\t};\n\n\treturn (\n\t\t<ListWrapper>\n\t\t\t<Input addTodo={addTodo} />\n\t\t\t<TasksList>\n\t\t\t\t{tasks.map((item) => (\n\t\t\t\t\t<Task\n\t\t\t\t\t\tremoveTodo={removeTodo}\n\t\t\t\t\t\ttask={item}\n\t\t\t\t\t\ttodoCompleted={todoCompleted}\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</TasksList>\n\t\t\t<RemoveTasksBlock>\n\t\t\t\t{tasks.length > 1 ? (\n\t\t\t\t\t<RemoveTasksButton onClick={() => setTasks([])}>\n\t\t\t\t\t\tУдалить все задания\n\t\t\t\t\t</RemoveTasksButton>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t</RemoveTasksBlock>\n\t\t</ListWrapper>\n\t);\n};\n\nexport default List;\n","import Title from \"./components/Title/Title\";\nimport List from \"./components/List/List\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}